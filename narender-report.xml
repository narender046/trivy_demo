<?xml version="1.0" ?>
<testsuites name="trivy">
    <testsuite tests="162" failures="162" name="narender046/myapp:1.0 (debian 10.12)" errors="0" skipped="0" time="">
        <properties>
            <property name="type" value="debian"></property>
        </properties>
        <testcase classname="apt-1.8.2.3" name="[LOW] CVE-2011-3374" time="">
            <failure message="It was found that apt-key in apt, all versions, do not correctly valid ..." type="description">It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack.</failure>
        </testcase>
        <testcase classname="bash-5.0-4" name="[MEDIUM] CVE-2022-3715" time="">
            <failure message="bash: a heap-buffer-overflow in valid_parameter_transform" type="description">A flaw was found in the bash package, where a heap-buffer overflow can occur in valid_parameter_transform. This issue may lead to memory problems.</failure>
        </testcase>
        <testcase classname="bash-5.0-4" name="[LOW] CVE-2019-18276" time="">
            <failure message="bash: when effective UID is not equal to its real UID the saved UID is not dropped" type="description">An issue was discovered in disable_priv_mode in shell.c in GNU Bash through 5.0 patch 11. By default, if Bash is run with its effective UID not equal to its real UID, it will drop privileges by setting its effective UID to its real UID. However, it does so incorrectly. On Linux and other systems that support &#34;saved UID&#34; functionality, the saved UID is not dropped. An attacker with command execution in the shell can use &#34;enable -f&#34; for runtime loading of a new builtin, which can be a shared object that calls setuid() and therefore regains privileges. However, binaries running with an effective UID of 0 are unaffected.</failure>
        </testcase>
        <testcase classname="bsdutils-2.33.1-0.1" name="[LOW] CVE-2021-37600" time="">
            <failure message="util-linux: integer overflow can lead to buffer overflow in get_sem_elements() in sys-utils/ipcutils.c" type="description">** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.</failure>
        </testcase>
        <testcase classname="bsdutils-2.33.1-0.1" name="[LOW] CVE-2022-0563" time="">
            <failure message="util-linux: partial disclosure of arbitrary files in chfn and chsh when compiled with libreadline" type="description">A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an &#34;INPUTRC&#34; environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.</failure>
        </testcase>
        <testcase classname="coreutils-8.30-3" name="[LOW] CVE-2016-2781" time="">
            <failure message="coreutils: Non-privileged session can escape to the parent session in chroot" type="description">chroot in GNU coreutils, when used with --userspec, allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal&#39;s input buffer.</failure>
        </testcase>
        <testcase classname="coreutils-8.30-3" name="[LOW] CVE-2017-18018" time="">
            <failure message="coreutils: race condition vulnerability in chown and chgrp" type="description">In GNU Coreutils through 8.29, chown-core.c in chown and chgrp does not prevent replacement of a plain file with a symlink during use of the POSIX &#34;-R -L&#34; options, which allows local users to modify the ownership of arbitrary files by leveraging a race condition.</failure>
        </testcase>
        <testcase classname="e2fsprogs-1.44.5-1+deb10u3" name="[HIGH] CVE-2022-1304" time="">
            <failure message="e2fsprogs: out-of-bounds read/write via crafted filesystem" type="description">An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.</failure>
        </testcase>
        <testcase classname="fdisk-2.33.1-0.1" name="[LOW] CVE-2021-37600" time="">
            <failure message="util-linux: integer overflow can lead to buffer overflow in get_sem_elements() in sys-utils/ipcutils.c" type="description">** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.</failure>
        </testcase>
        <testcase classname="fdisk-2.33.1-0.1" name="[LOW] CVE-2022-0563" time="">
            <failure message="util-linux: partial disclosure of arbitrary files in chfn and chsh when compiled with libreadline" type="description">A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an &#34;INPUTRC&#34; environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.</failure>
        </testcase>
        <testcase classname="gcc-8-base-8.3.0-6" name="[HIGH] CVE-2018-12886" time="">
            <failure message="gcc: spilling of stack protection address in cfgexpand.c and function.c leads to stack-overflow protection bypass" type="description">stack_protect_prologue in cfgexpand.c and stack_protect_epilogue in function.c in GNU Compiler Collection (GCC) 4.1 through 8 (under certain circumstances) generate instruction sequences when targeting ARM targets that spill the address of the stack protector guard, which allows an attacker to bypass the protection of -fstack-protector, -fstack-protector-all, -fstack-protector-strong, and -fstack-protector-explicit against stack overflow by controlling what the stack canary is compared against.</failure>
        </testcase>
        <testcase classname="gcc-8-base-8.3.0-6" name="[HIGH] CVE-2019-15847" time="">
            <failure message="gcc: POWER9 &#34;DARN&#34; RNG intrinsic produces repeated output" type="description">The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call, thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example, within a single execution of a program, the output of every __builtin_darn() call may be the same.</failure>
        </testcase>
        <testcase classname="gpgv-2.2.12-1+deb10u2" name="[LOW] CVE-2019-14855" time="">
            <failure message="gnupg2: OpenPGP Key Certification Forgeries with SHA-1" type="description">A flaw was found in the way certificate signatures could be forged using collisions found in the SHA-1 algorithm. An attacker could use this weakness to create forged certificate signatures. This issue affects GnuPG versions before 2.2.18.</failure>
        </testcase>
        <testcase classname="libapt-pkg5.0-1.8.2.3" name="[LOW] CVE-2011-3374" time="">
            <failure message="It was found that apt-key in apt, all versions, do not correctly valid ..." type="description">It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack.</failure>
        </testcase>
        <testcase classname="libblkid1-2.33.1-0.1" name="[LOW] CVE-2021-37600" time="">
            <failure message="util-linux: integer overflow can lead to buffer overflow in get_sem_elements() in sys-utils/ipcutils.c" type="description">** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.</failure>
        </testcase>
        <testcase classname="libblkid1-2.33.1-0.1" name="[LOW] CVE-2022-0563" time="">
            <failure message="util-linux: partial disclosure of arbitrary files in chfn and chsh when compiled with libreadline" type="description">A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an &#34;INPUTRC&#34; environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.</failure>
        </testcase>
        <testcase classname="libbz2-1.0-1.0.6-9.2~deb10u1" name="[UNKNOWN] DLA-3112-1" time="">
            <failure message="bzip2 - bugfix update" type="description"></failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[CRITICAL] CVE-2021-33574" time="">
            <failure message="glibc: mq_notify does not handle separately allocated thread attributes" type="description">The mq_notify function in the GNU C Library (aka glibc) versions 2.32 and 2.33 has a use-after-free. It may use the notification thread attributes object (passed through its struct sigevent parameter) after it has been freed by the caller, leading to a denial of service (application crash) or possibly unspecified other impact.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[CRITICAL] CVE-2021-35942" time="">
            <failure message="glibc: Arbitrary read in wordexp()" type="description">The wordexp function in the GNU C Library (aka glibc) through 2.33 may crash or read arbitrary memory in parse_param (in posix/wordexp.c) when called with an untrusted, crafted pattern, potentially resulting in a denial of service or disclosure of information. This occurs because atoi was used but strtoul should have been used to ensure correct calculations.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[CRITICAL] CVE-2022-23218" time="">
            <failure message="glibc: Stack-based buffer overflow in svcunix_create via long pathnames" type="description">The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[CRITICAL] CVE-2022-23219" time="">
            <failure message="glibc: Stack-based buffer overflow in sunrpc clnt_create via a long pathname" type="description">The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[HIGH] CVE-2020-1751" time="">
            <failure message="glibc: array overflow in backtrace functions for powerpc" type="description">An out-of-bounds write vulnerability was found in glibc before 2.31 when handling signal trampolines on PowerPC. Specifically, the backtrace function did not properly check the array bounds when storing the frame address, resulting in a denial of service or potential code execution. The highest threat from this vulnerability is to system availability.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[HIGH] CVE-2020-1752" time="">
            <failure message="glibc: use-after-free in glob() function when expanding ~user" type="description">A use-after-free vulnerability introduced in glibc upstream version 2.14 was found in the way the tilde expansion was carried out. Directory paths containing an initial tilde followed by a valid username were affected by this issue. A local attacker could exploit this flaw by creating a specially crafted path that, when processed by the glob function, would potentially lead to arbitrary code execution. This was fixed in version 2.32.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[HIGH] CVE-2020-6096" time="">
            <failure message="glibc: signed comparison vulnerability in the ARMv7 memcpy function" type="description">An exploitable signed comparison vulnerability exists in the ARMv7 memcpy() implementation of GNU glibc 2.30.9000. Calling memcpy() (on ARMv7 targets that utilize the GNU glibc implementation) with a negative value for the &#39;num&#39; parameter results in a signed comparison vulnerability. If an attacker underflows the &#39;num&#39; parameter to memcpy(), this vulnerability could lead to undefined behavior such as writing to out-of-bounds memory and potentially remote code execution. Furthermore, this memcpy() implementation allows for program execution to continue in scenarios where a segmentation fault or crash should have occurred. The dangers occur in that subsequent execution and iterations of this code will be executed with this corrupted data.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[HIGH] CVE-2021-3326" time="">
            <failure message="glibc: Assertion failure in ISO-2022-JP-3 gconv module related to combining characters" type="description">The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid input sequences in the ISO-2022-JP-3 encoding, fails an assertion in the code path and aborts the program, potentially resulting in a denial of service.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[HIGH] CVE-2021-3999" time="">
            <failure message="glibc: Off-by-one buffer overflow/underflow in getcwd()" type="description">A flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[MEDIUM] CVE-2016-10228" time="">
            <failure message="glibc: iconv program can hang when invoked with the -c option" type="description">The iconv program in the GNU C Library (aka glibc or libc6) 2.31 and earlier, when invoked with multiple suffixes in the destination encoding (TRANSLATE or IGNORE) along with the -c option, enters an infinite loop when processing invalid multi-byte input sequences, leading to a denial of service.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[MEDIUM] CVE-2019-25013" time="">
            <failure message="glibc: buffer over-read in iconv when processing invalid multi-byte input sequences in the EUC-KR encoding" type="description">The iconv feature in the GNU C Library (aka glibc or libc6) through 2.32, when processing invalid multi-byte input sequences in the EUC-KR encoding, may have a buffer over-read.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[MEDIUM] CVE-2020-10029" time="">
            <failure message="glibc: stack corruption from crafted input in cosl, sinl, sincosl, and tanl functions" type="description">The GNU C Library (aka glibc or libc6) before 2.32 could overflow an on-stack buffer during range reduction if an input to an 80-bit long double function contains a non-canonical bit pattern, a seen when passing a 0x5d414141414141410000 value to sinl on x86 targets. This is related to sysdeps/ieee754/ldbl-96/e_rem_pio2l.c.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[MEDIUM] CVE-2020-27618" time="">
            <failure message="glibc: iconv when processing invalid multi-byte input sequences fails to advance the input state, which could result in an infinite loop" type="description">The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid multi-byte input sequences in IBM1364, IBM1371, IBM1388, IBM1390, and IBM1399 encodings, fails to advance the input state, which could lead to an infinite loop in applications, resulting in a denial of service, a different vulnerability from CVE-2016-10228.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[LOW] CVE-2010-4756" time="">
            <failure message="glibc: glob implementation can cause excessive CPU and memory consumption due to crafted glob expressions" type="description">The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[LOW] CVE-2018-20796" time="">
            <failure message="glibc: uncontrolled recursion in function check_dst_limits_calc_pos_1 in posix/regexec.c" type="description">In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by &#39;(\227|)(\\1\\1|t1|\\\2537)+&#39; in grep.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[LOW] CVE-2019-1010022" time="">
            <failure message="glibc: stack guard protection bypass" type="description">** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate &#34;this is being treated as a non-security bug and no real threat.&#34;</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[LOW] CVE-2019-1010023" time="">
            <failure message="glibc: running ldd on malicious ELF leads to code execution because of wrong size computation" type="description">** DISPUTED ** GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate &#34;this is being treated as a non-security bug and no real threat.&#34;</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[LOW] CVE-2019-1010024" time="">
            <failure message="glibc: ASLR bypass using cache of thread stack and heap" type="description">** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate &#34;this is being treated as a non-security bug and no real threat.&#34;</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[LOW] CVE-2019-1010025" time="">
            <failure message="glibc: information disclosure of heap addresses of pthread_created thread" type="description">** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor&#39;s position is &#34;ASLR bypass itself is not a vulnerability.&#34;</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[LOW] CVE-2019-19126" time="">
            <failure message="glibc: LD_PREFER_MAP_32BIT_EXEC not ignored in setuid binaries" type="description">On the x86-64 architecture, the GNU C Library (aka glibc) before 2.31 fails to ignore the LD_PREFER_MAP_32BIT_EXEC environment variable during program execution after a security transition, allowing local attackers to restrict the possible mapping addresses for loaded libraries and thus bypass ASLR for a setuid program.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[LOW] CVE-2019-9192" time="">
            <failure message="glibc: uncontrolled recursion in function check_dst_limits_calc_pos_1 in posix/regexec.c" type="description">** DISPUTED ** In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by &#39;(|)(\\1\\1)*&#39; in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern.</failure>
        </testcase>
        <testcase classname="libc-bin-2.28-10+deb10u1" name="[LOW] CVE-2021-27645" time="">
            <failure message="glibc: Use-after-free in addgetnetgrentX function in netgroupcache.c" type="description">The nameserver caching daemon (nscd) in the GNU C Library (aka glibc or libc6) 2.29 through 2.33, when processing a request for netgroup lookup, may crash due to a double-free, potentially resulting in degraded service or Denial of Service on the local system. This is related to netgroupcache.c.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[CRITICAL] CVE-2021-33574" time="">
            <failure message="glibc: mq_notify does not handle separately allocated thread attributes" type="description">The mq_notify function in the GNU C Library (aka glibc) versions 2.32 and 2.33 has a use-after-free. It may use the notification thread attributes object (passed through its struct sigevent parameter) after it has been freed by the caller, leading to a denial of service (application crash) or possibly unspecified other impact.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[CRITICAL] CVE-2021-35942" time="">
            <failure message="glibc: Arbitrary read in wordexp()" type="description">The wordexp function in the GNU C Library (aka glibc) through 2.33 may crash or read arbitrary memory in parse_param (in posix/wordexp.c) when called with an untrusted, crafted pattern, potentially resulting in a denial of service or disclosure of information. This occurs because atoi was used but strtoul should have been used to ensure correct calculations.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[CRITICAL] CVE-2022-23218" time="">
            <failure message="glibc: Stack-based buffer overflow in svcunix_create via long pathnames" type="description">The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[CRITICAL] CVE-2022-23219" time="">
            <failure message="glibc: Stack-based buffer overflow in sunrpc clnt_create via a long pathname" type="description">The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[HIGH] CVE-2020-1751" time="">
            <failure message="glibc: array overflow in backtrace functions for powerpc" type="description">An out-of-bounds write vulnerability was found in glibc before 2.31 when handling signal trampolines on PowerPC. Specifically, the backtrace function did not properly check the array bounds when storing the frame address, resulting in a denial of service or potential code execution. The highest threat from this vulnerability is to system availability.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[HIGH] CVE-2020-1752" time="">
            <failure message="glibc: use-after-free in glob() function when expanding ~user" type="description">A use-after-free vulnerability introduced in glibc upstream version 2.14 was found in the way the tilde expansion was carried out. Directory paths containing an initial tilde followed by a valid username were affected by this issue. A local attacker could exploit this flaw by creating a specially crafted path that, when processed by the glob function, would potentially lead to arbitrary code execution. This was fixed in version 2.32.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[HIGH] CVE-2020-6096" time="">
            <failure message="glibc: signed comparison vulnerability in the ARMv7 memcpy function" type="description">An exploitable signed comparison vulnerability exists in the ARMv7 memcpy() implementation of GNU glibc 2.30.9000. Calling memcpy() (on ARMv7 targets that utilize the GNU glibc implementation) with a negative value for the &#39;num&#39; parameter results in a signed comparison vulnerability. If an attacker underflows the &#39;num&#39; parameter to memcpy(), this vulnerability could lead to undefined behavior such as writing to out-of-bounds memory and potentially remote code execution. Furthermore, this memcpy() implementation allows for program execution to continue in scenarios where a segmentation fault or crash should have occurred. The dangers occur in that subsequent execution and iterations of this code will be executed with this corrupted data.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[HIGH] CVE-2021-3326" time="">
            <failure message="glibc: Assertion failure in ISO-2022-JP-3 gconv module related to combining characters" type="description">The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid input sequences in the ISO-2022-JP-3 encoding, fails an assertion in the code path and aborts the program, potentially resulting in a denial of service.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[HIGH] CVE-2021-3999" time="">
            <failure message="glibc: Off-by-one buffer overflow/underflow in getcwd()" type="description">A flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[MEDIUM] CVE-2016-10228" time="">
            <failure message="glibc: iconv program can hang when invoked with the -c option" type="description">The iconv program in the GNU C Library (aka glibc or libc6) 2.31 and earlier, when invoked with multiple suffixes in the destination encoding (TRANSLATE or IGNORE) along with the -c option, enters an infinite loop when processing invalid multi-byte input sequences, leading to a denial of service.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[MEDIUM] CVE-2019-25013" time="">
            <failure message="glibc: buffer over-read in iconv when processing invalid multi-byte input sequences in the EUC-KR encoding" type="description">The iconv feature in the GNU C Library (aka glibc or libc6) through 2.32, when processing invalid multi-byte input sequences in the EUC-KR encoding, may have a buffer over-read.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[MEDIUM] CVE-2020-10029" time="">
            <failure message="glibc: stack corruption from crafted input in cosl, sinl, sincosl, and tanl functions" type="description">The GNU C Library (aka glibc or libc6) before 2.32 could overflow an on-stack buffer during range reduction if an input to an 80-bit long double function contains a non-canonical bit pattern, a seen when passing a 0x5d414141414141410000 value to sinl on x86 targets. This is related to sysdeps/ieee754/ldbl-96/e_rem_pio2l.c.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[MEDIUM] CVE-2020-27618" time="">
            <failure message="glibc: iconv when processing invalid multi-byte input sequences fails to advance the input state, which could result in an infinite loop" type="description">The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid multi-byte input sequences in IBM1364, IBM1371, IBM1388, IBM1390, and IBM1399 encodings, fails to advance the input state, which could lead to an infinite loop in applications, resulting in a denial of service, a different vulnerability from CVE-2016-10228.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[LOW] CVE-2010-4756" time="">
            <failure message="glibc: glob implementation can cause excessive CPU and memory consumption due to crafted glob expressions" type="description">The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[LOW] CVE-2018-20796" time="">
            <failure message="glibc: uncontrolled recursion in function check_dst_limits_calc_pos_1 in posix/regexec.c" type="description">In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by &#39;(\227|)(\\1\\1|t1|\\\2537)+&#39; in grep.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[LOW] CVE-2019-1010022" time="">
            <failure message="glibc: stack guard protection bypass" type="description">** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate &#34;this is being treated as a non-security bug and no real threat.&#34;</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[LOW] CVE-2019-1010023" time="">
            <failure message="glibc: running ldd on malicious ELF leads to code execution because of wrong size computation" type="description">** DISPUTED ** GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate &#34;this is being treated as a non-security bug and no real threat.&#34;</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[LOW] CVE-2019-1010024" time="">
            <failure message="glibc: ASLR bypass using cache of thread stack and heap" type="description">** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate &#34;this is being treated as a non-security bug and no real threat.&#34;</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[LOW] CVE-2019-1010025" time="">
            <failure message="glibc: information disclosure of heap addresses of pthread_created thread" type="description">** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor&#39;s position is &#34;ASLR bypass itself is not a vulnerability.&#34;</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[LOW] CVE-2019-19126" time="">
            <failure message="glibc: LD_PREFER_MAP_32BIT_EXEC not ignored in setuid binaries" type="description">On the x86-64 architecture, the GNU C Library (aka glibc) before 2.31 fails to ignore the LD_PREFER_MAP_32BIT_EXEC environment variable during program execution after a security transition, allowing local attackers to restrict the possible mapping addresses for loaded libraries and thus bypass ASLR for a setuid program.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[LOW] CVE-2019-9192" time="">
            <failure message="glibc: uncontrolled recursion in function check_dst_limits_calc_pos_1 in posix/regexec.c" type="description">** DISPUTED ** In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by &#39;(|)(\\1\\1)*&#39; in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern.</failure>
        </testcase>
        <testcase classname="libc6-2.28-10+deb10u1" name="[LOW] CVE-2021-27645" time="">
            <failure message="glibc: Use-after-free in addgetnetgrentX function in netgroupcache.c" type="description">The nameserver caching daemon (nscd) in the GNU C Library (aka glibc or libc6) 2.29 through 2.33, when processing a request for netgroup lookup, may crash due to a double-free, potentially resulting in degraded service or Denial of Service on the local system. This is related to netgroupcache.c.</failure>
        </testcase>
        <testcase classname="libcom-err2-1.44.5-1+deb10u3" name="[HIGH] CVE-2022-1304" time="">
            <failure message="e2fsprogs: out-of-bounds read/write via crafted filesystem" type="description">An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.</failure>
        </testcase>
        <testcase classname="libdb5.3-5.3.28+dfsg1-0.5" name="[CRITICAL] CVE-2019-8457" time="">
            <failure message="sqlite: heap out-of-bound read in function rtreenode()" type="description">SQLite3 from 3.6.0 to and including 3.27.2 is vulnerable to heap out-of-bound read in the rtreenode() function when handling invalid rtree tables.</failure>
        </testcase>
        <testcase classname="libexpat1-2.2.6-2+deb10u4" name="[CRITICAL] CVE-2022-40674" time="">
            <failure message="expat: a use-after-free in the doContent function in xmlparse.c" type="description">libexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c.</failure>
        </testcase>
        <testcase classname="libexpat1-2.2.6-2+deb10u4" name="[HIGH] CVE-2022-43680" time="">
            <failure message="expat: use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate" type="description">In libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations.</failure>
        </testcase>
        <testcase classname="libexpat1-2.2.6-2+deb10u4" name="[LOW] CVE-2013-0340" time="">
            <failure message="expat: internal entity expansion" type="description">expat 2.1.0 and earlier does not properly handle entities expansion unless an application developer uses the XML_SetEntityDeclHandler function, which allows remote attackers to cause a denial of service (resource consumption), send HTTP requests to intranet servers, or read arbitrary files via a crafted XML document, aka an XML External Entity (XXE) issue.  NOTE: it could be argued that because expat already provides the ability to disable external entity expansion, the responsibility for resolving this issue lies with application developers; according to this argument, this entry should be REJECTed, and each affected application would need its own CVE.</failure>
        </testcase>
        <testcase classname="libext2fs2-1.44.5-1+deb10u3" name="[HIGH] CVE-2022-1304" time="">
            <failure message="e2fsprogs: out-of-bounds read/write via crafted filesystem" type="description">An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.</failure>
        </testcase>
        <testcase classname="libfdisk1-2.33.1-0.1" name="[LOW] CVE-2021-37600" time="">
            <failure message="util-linux: integer overflow can lead to buffer overflow in get_sem_elements() in sys-utils/ipcutils.c" type="description">** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.</failure>
        </testcase>
        <testcase classname="libfdisk1-2.33.1-0.1" name="[LOW] CVE-2022-0563" time="">
            <failure message="util-linux: partial disclosure of arbitrary files in chfn and chsh when compiled with libreadline" type="description">A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an &#34;INPUTRC&#34; environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.</failure>
        </testcase>
        <testcase classname="libgcc1-8.3.0-6" name="[HIGH] CVE-2018-12886" time="">
            <failure message="gcc: spilling of stack protection address in cfgexpand.c and function.c leads to stack-overflow protection bypass" type="description">stack_protect_prologue in cfgexpand.c and stack_protect_epilogue in function.c in GNU Compiler Collection (GCC) 4.1 through 8 (under certain circumstances) generate instruction sequences when targeting ARM targets that spill the address of the stack protector guard, which allows an attacker to bypass the protection of -fstack-protector, -fstack-protector-all, -fstack-protector-strong, and -fstack-protector-explicit against stack overflow by controlling what the stack canary is compared against.</failure>
        </testcase>
        <testcase classname="libgcc1-8.3.0-6" name="[HIGH] CVE-2019-15847" time="">
            <failure message="gcc: POWER9 &#34;DARN&#34; RNG intrinsic produces repeated output" type="description">The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call, thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example, within a single execution of a program, the output of every __builtin_darn() call may be the same.</failure>
        </testcase>
        <testcase classname="libgcrypt20-1.8.4-5+deb10u1" name="[HIGH] CVE-2021-33560" time="">
            <failure message="libgcrypt: mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm" type="description">Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.</failure>
        </testcase>
        <testcase classname="libgcrypt20-1.8.4-5+deb10u1" name="[MEDIUM] CVE-2019-13627" time="">
            <failure message="libgcrypt: ECDSA timing attack allowing private key leak" type="description">It was discovered that there was a ECDSA timing attack in the libgcrypt20 cryptographic library. Version affected: 1.8.4-5, 1.7.6-2+deb9u3, and 1.6.3-2+deb8u4. Versions fixed: 1.8.5-2 and 1.6.3-2+deb8u7.</failure>
        </testcase>
        <testcase classname="libgcrypt20-1.8.4-5+deb10u1" name="[LOW] CVE-2018-6829" time="">
            <failure message="libgcrypt: ElGamal implementation doesn&#39;t have semantic security due to incorrectly encoded plaintexts possibly allowing to obtain sensitive information" type="description">cipher/elgamal.c in Libgcrypt through 1.8.2, when used to encrypt messages directly, improperly encodes plaintexts, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for Libgcrypt&#39;s ElGamal implementation.</failure>
        </testcase>
        <testcase classname="libgnutls30-3.6.7-4+deb10u7" name="[HIGH] CVE-2022-2509" time="">
            <failure message="gnutls: Double free during gnutls_pkcs7_verify" type="description">A vulnerability found in gnutls. This security flaw happens because of a double free error occurs during verification of pkcs7 signatures in gnutls_pkcs7_verify function.</failure>
        </testcase>
        <testcase classname="libgnutls30-3.6.7-4+deb10u7" name="[MEDIUM] CVE-2021-4209" time="">
            <failure message="GnuTLS: Null pointer dereference in MD_UPDATE" type="description">A NULL pointer dereference flaw was found in GnuTLS. As Nettle&#39;s hash update functions internally call memcpy, providing zero-length input may cause undefined behavior. This flaw leads to a denial of service after authentication in rare circumstances.</failure>
        </testcase>
        <testcase classname="libgnutls30-3.6.7-4+deb10u7" name="[LOW] CVE-2011-3389" time="">
            <failure message="HTTPS: block-wise chosen-plaintext attack against SSL/TLS (BEAST)" type="description">The SSL protocol, as used in certain configurations in Microsoft Windows and Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera, and other products, encrypts data by using CBC mode with chained initialization vectors, which allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a &#34;BEAST&#34; attack.</failure>
        </testcase>
        <testcase classname="libidn2-0-2.0.5-1+deb10u1" name="[HIGH] CVE-2019-12290" time="">
            <failure message="GNU libidn2 before 2.2.0 fails to perform the roundtrip checks specifi ..." type="description">GNU libidn2 before 2.2.0 fails to perform the roundtrip checks specified in RFC3490 Section 4.2 when converting A-labels to U-labels. This makes it possible in some circumstances for one domain to impersonate another. By creating a malicious domain that matches a target domain except for the inclusion of certain punycoded Unicode characters (that would be discarded when converted first to a Unicode label and then back to an ASCII label), arbitrary domains can be impersonated.</failure>
        </testcase>
        <testcase classname="liblz4-1-1.8.3-1+deb10u1" name="[LOW] CVE-2019-17543" time="">
            <failure message="lz4: heap-based buffer overflow in LZ4_write32" type="description">LZ4 before 1.9.2 has a heap-based buffer overflow in LZ4_write32 (related to LZ4_compress_destSize), affecting applications that call LZ4_compress_fast with a large input. (This issue can also lead to data corruption.) NOTE: the vendor states &#34;only a few specific / uncommon usages of the API are at risk.&#34;</failure>
        </testcase>
        <testcase classname="libmount1-2.33.1-0.1" name="[LOW] CVE-2021-37600" time="">
            <failure message="util-linux: integer overflow can lead to buffer overflow in get_sem_elements() in sys-utils/ipcutils.c" type="description">** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.</failure>
        </testcase>
        <testcase classname="libmount1-2.33.1-0.1" name="[LOW] CVE-2022-0563" time="">
            <failure message="util-linux: partial disclosure of arbitrary files in chfn and chsh when compiled with libreadline" type="description">A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an &#34;INPUTRC&#34; environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.</failure>
        </testcase>
        <testcase classname="libncursesw6-6.1+20181013-2+deb10u2" name="[HIGH] CVE-2022-29458" time="">
            <failure message="ncurses: segfaulting OOB read" type="description">ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.</failure>
        </testcase>
        <testcase classname="libncursesw6-6.1+20181013-2+deb10u2" name="[LOW] CVE-2021-39537" time="">
            <failure message="ncurses: heap-based buffer overflow in _nc_captoinfo() in captoinfo.c" type="description">An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.</failure>
        </testcase>
        <testcase classname="libpcre3-2:8.39-12" name="[MEDIUM] CVE-2020-14155" time="">
            <failure message="pcre: Integer overflow when parsing callout numeric arguments" type="description">libpcre in PCRE before 8.44 allows an integer overflow via a large number after a (?C substring.</failure>
        </testcase>
        <testcase classname="libpcre3-2:8.39-12" name="[LOW] CVE-2017-11164" time="">
            <failure message="pcre: OP_KETRMAX feature in the match function in pcre_exec.c" type="description">In PCRE 8.41, the OP_KETRMAX feature in the match function in pcre_exec.c allows stack exhaustion (uncontrolled recursion) when processing a crafted regular expression.</failure>
        </testcase>
        <testcase classname="libpcre3-2:8.39-12" name="[LOW] CVE-2017-16231" time="">
            <failure message="pcre: self-recursive call in match() in pcre_exec.c leads to denial of service" type="description">** DISPUTED ** In PCRE 8.41, after compiling, a pcretest load test PoC produces a crash overflow in the function match() in pcre_exec.c because of a self-recursive call. NOTE: third parties dispute the relevance of this report, noting that there are options that can be used to limit the amount of stack that is used.</failure>
        </testcase>
        <testcase classname="libpcre3-2:8.39-12" name="[LOW] CVE-2017-7245" time="">
            <failure message="pcre: stack-based buffer overflow write in pcre32_copy_substring" type="description">Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 4) or possibly have unspecified other impact via a crafted file.</failure>
        </testcase>
        <testcase classname="libpcre3-2:8.39-12" name="[LOW] CVE-2017-7246" time="">
            <failure message="pcre: stack-based buffer overflow write in pcre32_copy_substring" type="description">Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 268) or possibly have unspecified other impact via a crafted file.</failure>
        </testcase>
        <testcase classname="libpcre3-2:8.39-12" name="[LOW] CVE-2019-20838" time="">
            <failure message="pcre: Buffer over-read in JIT when UTF is disabled and \X or \R has fixed quantifier greater than 1" type="description">libpcre in PCRE before 8.43 allows a subject buffer over-read in JIT when UTF is disabled, and \X or \R has more than one fixed quantifier, a related issue to CVE-2019-20454.</failure>
        </testcase>
        <testcase classname="libseccomp2-2.3.3-4" name="[LOW] CVE-2019-9893" time="">
            <failure message="libseccomp: incorrect generation of syscall filters in libseccomp" type="description">libseccomp before 2.4.0 did not correctly generate 64-bit syscall argument comparisons using the arithmetic operators (LT, GT, LE, GE), which might able to lead to bypassing seccomp filters and potential privilege escalations.</failure>
        </testcase>
        <testcase classname="libsepol1-2.8-1" name="[LOW] CVE-2021-36084" time="">
            <failure message="libsepol: use-after-free in __cil_verify_classperms()" type="description">The CIL compiler in SELinux 3.2 has a use-after-free in __cil_verify_classperms (called from __cil_verify_classpermission and __cil_pre_verify_helper).</failure>
        </testcase>
        <testcase classname="libsepol1-2.8-1" name="[LOW] CVE-2021-36085" time="">
            <failure message="libsepol: use-after-free in __cil_verify_classperms()" type="description">The CIL compiler in SELinux 3.2 has a use-after-free in __cil_verify_classperms (called from __verify_map_perm_classperms and hashtab_map).</failure>
        </testcase>
        <testcase classname="libsepol1-2.8-1" name="[LOW] CVE-2021-36086" time="">
            <failure message="libsepol: use-after-free in cil_reset_classpermission()" type="description">The CIL compiler in SELinux 3.2 has a use-after-free in cil_reset_classpermission (called from cil_reset_classperms_set and cil_reset_classperms_list).</failure>
        </testcase>
        <testcase classname="libsepol1-2.8-1" name="[LOW] CVE-2021-36087" time="">
            <failure message="libsepol: heap-based buffer overflow in ebitmap_match_any()" type="description">The CIL compiler in SELinux 3.2 has a heap-based buffer over-read in ebitmap_match_any (called indirectly from cil_check_neverallow). This occurs because there is sometimes a lack of checks for invalid statements in an optional block.</failure>
        </testcase>
        <testcase classname="libsmartcols1-2.33.1-0.1" name="[LOW] CVE-2021-37600" time="">
            <failure message="util-linux: integer overflow can lead to buffer overflow in get_sem_elements() in sys-utils/ipcutils.c" type="description">** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.</failure>
        </testcase>
        <testcase classname="libsmartcols1-2.33.1-0.1" name="[LOW] CVE-2022-0563" time="">
            <failure message="util-linux: partial disclosure of arbitrary files in chfn and chsh when compiled with libreadline" type="description">A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an &#34;INPUTRC&#34; environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.</failure>
        </testcase>
        <testcase classname="libsqlite3-0-3.27.2-3+deb10u1" name="[CRITICAL] CVE-2020-35527" time="">
            <failure message="sqlite: Out of bounds access during table rename" type="description">In SQLite 3.31.1, there is an out of bounds access problem through ALTER TABLE for views that have a nested FROM clause.</failure>
        </testcase>
        <testcase classname="libsqlite3-0-3.27.2-3+deb10u1" name="[HIGH] CVE-2019-19603" time="">
            <failure message="sqlite: mishandling of certain SELECT statements with non-existent VIEW can lead to DoS" type="description">SQLite 3.30.1 mishandles certain SELECT statements with a nonexistent VIEW, leading to an application crash.</failure>
        </testcase>
        <testcase classname="libsqlite3-0-3.27.2-3+deb10u1" name="[HIGH] CVE-2020-35525" time="">
            <failure message="sqlite: Null pointer derreference in src/select.c" type="description">In SQlite 3.31.1, a potential null pointer derreference was found in the INTERSEC query processing.</failure>
        </testcase>
        <testcase classname="libsqlite3-0-3.27.2-3+deb10u1" name="[MEDIUM] CVE-2019-19645" time="">
            <failure message="sqlite: infinite recursion via certain types of self-referential views in conjunction with ALTER TABLE statements" type="description">alter.c in SQLite through 3.30.1 allows attackers to trigger infinite recursion via certain types of self-referential views in conjunction with ALTER TABLE statements.</failure>
        </testcase>
        <testcase classname="libsqlite3-0-3.27.2-3+deb10u1" name="[MEDIUM] CVE-2019-19924" time="">
            <failure message="sqlite: incorrect sqlite3WindowRewrite() error handling leads to mishandling certain parser-tree rewriting" type="description">SQLite 3.30.1 mishandles certain parser-tree rewriting, related to expr.c, vdbeaux.c, and window.c. This is caused by incorrect sqlite3WindowRewrite() error handling.</failure>
        </testcase>
        <testcase classname="libsqlite3-0-3.27.2-3+deb10u1" name="[MEDIUM] CVE-2020-13631" time="">
            <failure message="sqlite: Virtual table can be renamed into the name of one of its shadow tables" type="description">SQLite before 3.32.0 allows a virtual table to be renamed to the name of one of its shadow tables, related to alter.c and build.c.</failure>
        </testcase>
        <testcase classname="libsqlite3-0-3.27.2-3+deb10u1" name="[MEDIUM] CVE-2021-45346" time="">
            <failure message="sqlite: crafted SQL query allows a malicious user to obtain sensitive information" type="description">** DISPUTED ** A Memory Leak vulnerability exists in SQLite Project SQLite3 3.35.1 and 3.37.0 via maliciously crafted SQL Queries (made via editing the Database File), it is possible to query a record, and leak subsequent bytes of memory that extend beyond the record, which could let a malicious user obtain sensitive information. NOTE: The developer disputes this as a vulnerability stating that If you give SQLite a corrupted database file and submit a query against the database, it might read parts of the database that you did not intend or expect.</failure>
        </testcase>
        <testcase classname="libsqlite3-0-3.27.2-3+deb10u1" name="[LOW] CVE-2019-19244" time="">
            <failure message="sqlite: allows a crash if a sub-select uses both DISTINCT and window functions and also has certain ORDER BY usage" type="description">sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.</failure>
        </testcase>
        <testcase classname="libsqlite3-0-3.27.2-3+deb10u1" name="[LOW] CVE-2020-11656" time="">
            <failure message="sqlite: use-after-free in the ALTER TABLE implementation" type="description">In SQLite through 3.31.1, the ALTER TABLE implementation has a use-after-free, as demonstrated by an ORDER BY clause that belongs to a compound SELECT statement.</failure>
        </testcase>
        <testcase classname="libsqlite3-0-3.27.2-3+deb10u1" name="[LOW] CVE-2021-36690" time="">
            <failure message="** DISPUTED ** A segmentation fault can occur in the sqlite3.exe comma ..." type="description">** DISPUTED ** A segmentation fault can occur in the sqlite3.exe command-line component of SQLite 3.36.0 via the idxGetTableInfo function when there is a crafted SQL query. NOTE: the vendor disputes the relevance of this report because a sqlite3.exe user already has full privileges (e.g., is intentionally allowed to execute commands). This report does NOT imply any problem in the SQLite library.</failure>
        </testcase>
        <testcase classname="libsqlite3-0-3.27.2-3+deb10u1" name="[LOW] CVE-2022-35737" time="">
            <failure message="sqlite: an array-bounds overflow if billions of bytes are used in a string argument to a C API" type="description">SQLite 1.0.12 through 3.39.x before 3.39.2 sometimes allows an array-bounds overflow if billions of bytes are used in a string argument to a C API.</failure>
        </testcase>
        <testcase classname="libss2-1.44.5-1+deb10u3" name="[HIGH] CVE-2022-1304" time="">
            <failure message="e2fsprogs: out-of-bounds read/write via crafted filesystem" type="description">An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.</failure>
        </testcase>
        <testcase classname="libssl1.1-1.1.1n-0+deb10u3" name="[MEDIUM] CVE-2022-2097" time="">
            <failure message="openssl: AES OCB fails to encrypt some bytes" type="description">AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn&#39;t written. In the special case of &#34;in place&#34; encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).</failure>
        </testcase>
        <testcase classname="libssl1.1-1.1.1n-0+deb10u3" name="[LOW] CVE-2007-6755" time="">
            <failure message="Dual_EC_DRBG: weak pseudo random number generator" type="description">The NIST SP 800-90A default statement of the Dual Elliptic Curve Deterministic Random Bit Generation (Dual_EC_DRBG) algorithm contains point Q constants with a possible relationship to certain &#34;skeleton key&#34; values, which might allow context-dependent attackers to defeat cryptographic protection mechanisms by leveraging knowledge of those values.  NOTE: this is a preliminary CVE for Dual_EC_DRBG; future research may provide additional details about point Q and associated attacks, and could potentially lead to a RECAST or REJECT of this CVE.</failure>
        </testcase>
        <testcase classname="libssl1.1-1.1.1n-0+deb10u3" name="[LOW] CVE-2010-0928" time="">
            <failure message="openssl: RSA authentication weakness" type="description">OpenSSL 0.9.8i on the Gaisler Research LEON3 SoC on the Xilinx Virtex-II Pro FPGA uses a Fixed Width Exponentiation (FWE) algorithm for certain signature calculations, and does not verify the signature before providing it to a caller, which makes it easier for physically proximate attackers to determine the private key via a modified supply voltage for the microprocessor, related to a &#34;fault-based attack.&#34;</failure>
        </testcase>
        <testcase classname="libstdc++6-8.3.0-6" name="[HIGH] CVE-2018-12886" time="">
            <failure message="gcc: spilling of stack protection address in cfgexpand.c and function.c leads to stack-overflow protection bypass" type="description">stack_protect_prologue in cfgexpand.c and stack_protect_epilogue in function.c in GNU Compiler Collection (GCC) 4.1 through 8 (under certain circumstances) generate instruction sequences when targeting ARM targets that spill the address of the stack protector guard, which allows an attacker to bypass the protection of -fstack-protector, -fstack-protector-all, -fstack-protector-strong, and -fstack-protector-explicit against stack overflow by controlling what the stack canary is compared against.</failure>
        </testcase>
        <testcase classname="libstdc++6-8.3.0-6" name="[HIGH] CVE-2019-15847" time="">
            <failure message="gcc: POWER9 &#34;DARN&#34; RNG intrinsic produces repeated output" type="description">The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call, thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example, within a single execution of a program, the output of every __builtin_darn() call may be the same.</failure>
        </testcase>
        <testcase classname="libsystemd0-241-7~deb10u8" name="[HIGH] CVE-2019-3843" time="">
            <failure message="systemd: services with DynamicUser can create SUID/SGID binaries" type="description">It was discovered that a systemd service that uses DynamicUser property can create a SUID/SGID binary that would be allowed to run as the transient service UID/GID even after the service is terminated. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the UID/GID will be recycled.</failure>
        </testcase>
        <testcase classname="libsystemd0-241-7~deb10u8" name="[HIGH] CVE-2019-3844" time="">
            <failure message="systemd: services with DynamicUser can get new privileges and create SGID binaries" type="description">It was discovered that a systemd service that uses DynamicUser property can get new privileges through the execution of SUID binaries, which would allow to create binaries owned by the service transient group with the setgid bit set. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the GID will be recycled.</failure>
        </testcase>
        <testcase classname="libsystemd0-241-7~deb10u8" name="[MEDIUM] CVE-2021-3997" time="">
            <failure message="systemd: Uncontrolled recursion in systemd-tmpfiles when removing files" type="description">A flaw was found in systemd. An uncontrolled recursion in systemd-tmpfiles may lead to a denial of service at boot time when too many nested directories are created in /tmp.</failure>
        </testcase>
        <testcase classname="libsystemd0-241-7~deb10u8" name="[MEDIUM] CVE-2022-3821" time="">
            <failure message="systemd: buffer overrun in format_timespan() function." type="description">An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.</failure>
        </testcase>
        <testcase classname="libsystemd0-241-7~deb10u8" name="[LOW] CVE-2013-4392" time="">
            <failure message="systemd: TOCTOU race condition when updating file permissions and SELinux security contexts" type="description">systemd, when updating file permissions, allows local users to change the permissions and SELinux security contexts for arbitrary files via a symlink attack on unspecified files.</failure>
        </testcase>
        <testcase classname="libsystemd0-241-7~deb10u8" name="[LOW] CVE-2019-20386" time="">
            <failure message="systemd: memory leak in button_open() in login/logind-button.c when udev events are received" type="description">An issue was discovered in button_open in login/logind-button.c in systemd before 243. When executing the udevadm trigger command, a memory leak may occur.</failure>
        </testcase>
        <testcase classname="libsystemd0-241-7~deb10u8" name="[LOW] CVE-2020-13529" time="">
            <failure message="systemd: DHCP FORCERENEW authentication not implemented can cause a system running the DHCP client to have its network reconfigured" type="description">An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.</failure>
        </testcase>
        <testcase classname="libsystemd0-241-7~deb10u8" name="[LOW] CVE-2020-13776" time="">
            <failure message="systemd: Mishandles numerical usernames beginning with decimal digits or 0x followed by hexadecimal digits" type="description">systemd through v245 mishandles numerical usernames such as ones composed of decimal digits or 0x followed by hex digits, as demonstrated by use of root privileges when privileges of the 0x0 user account were intended. NOTE: this issue exists because of an incomplete fix for CVE-2017-1000082.</failure>
        </testcase>
        <testcase classname="libtasn1-6-4.13-3" name="[CRITICAL] CVE-2021-46848" time="">
            <failure message="libtasn1: Out-of-bound access in ETYPE_OK" type="description">GNU Libtasn1 before 4.19.0 has an ETYPE_OK off-by-one array size check that affects asn1_encode_simple_der.</failure>
        </testcase>
        <testcase classname="libtasn1-6-4.13-3" name="[LOW] CVE-2018-1000654" time="">
            <failure message="libtasn1: Infinite loop in _asn1_expand_object_id(ptree) leads to memory exhaustion" type="description">GNU Libtasn1-4.13 libtasn1-4.13 version libtasn1-4.13, libtasn1-4.12 contains a DoS, specifically CPU usage will reach 100% when running asn1Paser against the POC due to an issue in _asn1_expand_object_id(p_tree), after a long time, the program will be killed. This attack appears to be exploitable via parsing a crafted file.</failure>
        </testcase>
        <testcase classname="libtinfo6-6.1+20181013-2+deb10u2" name="[HIGH] CVE-2022-29458" time="">
            <failure message="ncurses: segfaulting OOB read" type="description">ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.</failure>
        </testcase>
        <testcase classname="libtinfo6-6.1+20181013-2+deb10u2" name="[LOW] CVE-2021-39537" time="">
            <failure message="ncurses: heap-based buffer overflow in _nc_captoinfo() in captoinfo.c" type="description">An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.</failure>
        </testcase>
        <testcase classname="libudev1-241-7~deb10u8" name="[HIGH] CVE-2019-3843" time="">
            <failure message="systemd: services with DynamicUser can create SUID/SGID binaries" type="description">It was discovered that a systemd service that uses DynamicUser property can create a SUID/SGID binary that would be allowed to run as the transient service UID/GID even after the service is terminated. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the UID/GID will be recycled.</failure>
        </testcase>
        <testcase classname="libudev1-241-7~deb10u8" name="[HIGH] CVE-2019-3844" time="">
            <failure message="systemd: services with DynamicUser can get new privileges and create SGID binaries" type="description">It was discovered that a systemd service that uses DynamicUser property can get new privileges through the execution of SUID binaries, which would allow to create binaries owned by the service transient group with the setgid bit set. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the GID will be recycled.</failure>
        </testcase>
        <testcase classname="libudev1-241-7~deb10u8" name="[MEDIUM] CVE-2021-3997" time="">
            <failure message="systemd: Uncontrolled recursion in systemd-tmpfiles when removing files" type="description">A flaw was found in systemd. An uncontrolled recursion in systemd-tmpfiles may lead to a denial of service at boot time when too many nested directories are created in /tmp.</failure>
        </testcase>
        <testcase classname="libudev1-241-7~deb10u8" name="[MEDIUM] CVE-2022-3821" time="">
            <failure message="systemd: buffer overrun in format_timespan() function." type="description">An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.</failure>
        </testcase>
        <testcase classname="libudev1-241-7~deb10u8" name="[LOW] CVE-2013-4392" time="">
            <failure message="systemd: TOCTOU race condition when updating file permissions and SELinux security contexts" type="description">systemd, when updating file permissions, allows local users to change the permissions and SELinux security contexts for arbitrary files via a symlink attack on unspecified files.</failure>
        </testcase>
        <testcase classname="libudev1-241-7~deb10u8" name="[LOW] CVE-2019-20386" time="">
            <failure message="systemd: memory leak in button_open() in login/logind-button.c when udev events are received" type="description">An issue was discovered in button_open in login/logind-button.c in systemd before 243. When executing the udevadm trigger command, a memory leak may occur.</failure>
        </testcase>
        <testcase classname="libudev1-241-7~deb10u8" name="[LOW] CVE-2020-13529" time="">
            <failure message="systemd: DHCP FORCERENEW authentication not implemented can cause a system running the DHCP client to have its network reconfigured" type="description">An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.</failure>
        </testcase>
        <testcase classname="libudev1-241-7~deb10u8" name="[LOW] CVE-2020-13776" time="">
            <failure message="systemd: Mishandles numerical usernames beginning with decimal digits or 0x followed by hexadecimal digits" type="description">systemd through v245 mishandles numerical usernames such as ones composed of decimal digits or 0x followed by hex digits, as demonstrated by use of root privileges when privileges of the 0x0 user account were intended. NOTE: this issue exists because of an incomplete fix for CVE-2017-1000082.</failure>
        </testcase>
        <testcase classname="libuuid1-2.33.1-0.1" name="[LOW] CVE-2021-37600" time="">
            <failure message="util-linux: integer overflow can lead to buffer overflow in get_sem_elements() in sys-utils/ipcutils.c" type="description">** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.</failure>
        </testcase>
        <testcase classname="libuuid1-2.33.1-0.1" name="[LOW] CVE-2022-0563" time="">
            <failure message="util-linux: partial disclosure of arbitrary files in chfn and chsh when compiled with libreadline" type="description">A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an &#34;INPUTRC&#34; environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.</failure>
        </testcase>
        <testcase classname="login-1:4.5-1.1" name="[LOW] CVE-2007-5686" time="">
            <failure message="initscripts in rPath Linux 1 sets insecure permissions for the /var/lo ..." type="description">initscripts in rPath Linux 1 sets insecure permissions for the /var/log/btmp file, which allows local users to obtain sensitive information regarding authentication attempts.  NOTE: because sshd detects the insecure permissions and does not log certain events, this also prevents sshd from logging failed authentication attempts by remote attackers.</failure>
        </testcase>
        <testcase classname="login-1:4.5-1.1" name="[LOW] CVE-2013-4235" time="">
            <failure message="shadow-utils: TOCTOU race conditions by copying and removing directory trees" type="description">shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees</failure>
        </testcase>
        <testcase classname="login-1:4.5-1.1" name="[LOW] CVE-2018-7169" time="">
            <failure message="shadow-utils: newgidmap allows unprivileged user to drop supplementary groups potentially allowing privilege escalation" type="description">An issue was discovered in shadow 4.5. newgidmap (in shadow-utils) is setuid and allows an unprivileged user to be placed in a user namespace where setgroups(2) is permitted. This allows an attacker to remove themselves from a supplementary group, which may allow access to certain filesystem paths if the administrator has used &#34;group blacklisting&#34; (e.g., chmod g-rwx) to restrict access to paths. This flaw effectively reverts a security feature in the kernel (in particular, the /proc/self/setgroups knob) to prevent this sort of privilege escalation.</failure>
        </testcase>
        <testcase classname="login-1:4.5-1.1" name="[LOW] CVE-2019-19882" time="">
            <failure message="shadow-utils: local users can obtain root access because setuid programs are misconfigured" type="description">shadow 4.8, in certain circumstances affecting at least Gentoo, Arch Linux, and Void Linux, allows local users to obtain root access because setuid programs are misconfigured. Specifically, this affects shadow 4.8 when compiled using --with-libpam but without explicitly passing --disable-account-tools-setuid, and without a PAM configuration suitable for use with setuid account management tools. This combination leads to account management tools (groupadd, groupdel, groupmod, useradd, userdel, usermod) that can easily be used by unprivileged local users to escalate privileges to root in multiple ways. This issue became much more relevant in approximately December 2019 when an unrelated bug was fixed (i.e., the chmod calls to suidusbins were fixed in the upstream Makefile which is now included in the release version 4.8).</failure>
        </testcase>
        <testcase classname="mount-2.33.1-0.1" name="[LOW] CVE-2021-37600" time="">
            <failure message="util-linux: integer overflow can lead to buffer overflow in get_sem_elements() in sys-utils/ipcutils.c" type="description">** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.</failure>
        </testcase>
        <testcase classname="mount-2.33.1-0.1" name="[LOW] CVE-2022-0563" time="">
            <failure message="util-linux: partial disclosure of arbitrary files in chfn and chsh when compiled with libreadline" type="description">A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an &#34;INPUTRC&#34; environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.</failure>
        </testcase>
        <testcase classname="ncurses-base-6.1+20181013-2+deb10u2" name="[HIGH] CVE-2022-29458" time="">
            <failure message="ncurses: segfaulting OOB read" type="description">ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.</failure>
        </testcase>
        <testcase classname="ncurses-base-6.1+20181013-2+deb10u2" name="[LOW] CVE-2021-39537" time="">
            <failure message="ncurses: heap-based buffer overflow in _nc_captoinfo() in captoinfo.c" type="description">An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.</failure>
        </testcase>
        <testcase classname="ncurses-bin-6.1+20181013-2+deb10u2" name="[HIGH] CVE-2022-29458" time="">
            <failure message="ncurses: segfaulting OOB read" type="description">ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.</failure>
        </testcase>
        <testcase classname="ncurses-bin-6.1+20181013-2+deb10u2" name="[LOW] CVE-2021-39537" time="">
            <failure message="ncurses: heap-based buffer overflow in _nc_captoinfo() in captoinfo.c" type="description">An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.</failure>
        </testcase>
        <testcase classname="openssl-1.1.1n-0+deb10u3" name="[MEDIUM] CVE-2022-2097" time="">
            <failure message="openssl: AES OCB fails to encrypt some bytes" type="description">AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn&#39;t written. In the special case of &#34;in place&#34; encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).</failure>
        </testcase>
        <testcase classname="openssl-1.1.1n-0+deb10u3" name="[LOW] CVE-2007-6755" time="">
            <failure message="Dual_EC_DRBG: weak pseudo random number generator" type="description">The NIST SP 800-90A default statement of the Dual Elliptic Curve Deterministic Random Bit Generation (Dual_EC_DRBG) algorithm contains point Q constants with a possible relationship to certain &#34;skeleton key&#34; values, which might allow context-dependent attackers to defeat cryptographic protection mechanisms by leveraging knowledge of those values.  NOTE: this is a preliminary CVE for Dual_EC_DRBG; future research may provide additional details about point Q and associated attacks, and could potentially lead to a RECAST or REJECT of this CVE.</failure>
        </testcase>
        <testcase classname="openssl-1.1.1n-0+deb10u3" name="[LOW] CVE-2010-0928" time="">
            <failure message="openssl: RSA authentication weakness" type="description">OpenSSL 0.9.8i on the Gaisler Research LEON3 SoC on the Xilinx Virtex-II Pro FPGA uses a Fixed Width Exponentiation (FWE) algorithm for certain signature calculations, and does not verify the signature before providing it to a caller, which makes it easier for physically proximate attackers to determine the private key via a modified supply voltage for the microprocessor, related to a &#34;fault-based attack.&#34;</failure>
        </testcase>
        <testcase classname="passwd-1:4.5-1.1" name="[LOW] CVE-2007-5686" time="">
            <failure message="initscripts in rPath Linux 1 sets insecure permissions for the /var/lo ..." type="description">initscripts in rPath Linux 1 sets insecure permissions for the /var/log/btmp file, which allows local users to obtain sensitive information regarding authentication attempts.  NOTE: because sshd detects the insecure permissions and does not log certain events, this also prevents sshd from logging failed authentication attempts by remote attackers.</failure>
        </testcase>
        <testcase classname="passwd-1:4.5-1.1" name="[LOW] CVE-2013-4235" time="">
            <failure message="shadow-utils: TOCTOU race conditions by copying and removing directory trees" type="description">shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees</failure>
        </testcase>
        <testcase classname="passwd-1:4.5-1.1" name="[LOW] CVE-2018-7169" time="">
            <failure message="shadow-utils: newgidmap allows unprivileged user to drop supplementary groups potentially allowing privilege escalation" type="description">An issue was discovered in shadow 4.5. newgidmap (in shadow-utils) is setuid and allows an unprivileged user to be placed in a user namespace where setgroups(2) is permitted. This allows an attacker to remove themselves from a supplementary group, which may allow access to certain filesystem paths if the administrator has used &#34;group blacklisting&#34; (e.g., chmod g-rwx) to restrict access to paths. This flaw effectively reverts a security feature in the kernel (in particular, the /proc/self/setgroups knob) to prevent this sort of privilege escalation.</failure>
        </testcase>
        <testcase classname="passwd-1:4.5-1.1" name="[LOW] CVE-2019-19882" time="">
            <failure message="shadow-utils: local users can obtain root access because setuid programs are misconfigured" type="description">shadow 4.8, in certain circumstances affecting at least Gentoo, Arch Linux, and Void Linux, allows local users to obtain root access because setuid programs are misconfigured. Specifically, this affects shadow 4.8 when compiled using --with-libpam but without explicitly passing --disable-account-tools-setuid, and without a PAM configuration suitable for use with setuid account management tools. This combination leads to account management tools (groupadd, groupdel, groupmod, useradd, userdel, usermod) that can easily be used by unprivileged local users to escalate privileges to root in multiple ways. This issue became much more relevant in approximately December 2019 when an unrelated bug was fixed (i.e., the chmod calls to suidusbins were fixed in the upstream Makefile which is now included in the release version 4.8).</failure>
        </testcase>
        <testcase classname="perl-base-5.28.1-6+deb10u1" name="[HIGH] CVE-2020-16156" time="">
            <failure message="perl-CPAN: Bypass of verification of signatures in CHECKSUMS files" type="description">CPAN 2.28 allows Signature Verification Bypass.</failure>
        </testcase>
        <testcase classname="perl-base-5.28.1-6+deb10u1" name="[LOW] CVE-2011-4116" time="">
            <failure message="perl: File::Temp insecure temporary file handling" type="description">_is_safe in the File::Temp module for Perl does not properly handle symlinks.</failure>
        </testcase>
        <testcase classname="tar-1.30+dfsg-6" name="[LOW] CVE-2005-2541" time="">
            <failure message="tar: does not properly warn the user when extracting setuid or setgid files" type="description">Tar 1.15.1 does not properly warn the user when extracting setuid or setgid files, which may allow local users or remote attackers to gain privileges.</failure>
        </testcase>
        <testcase classname="tar-1.30+dfsg-6" name="[LOW] CVE-2019-9923" time="">
            <failure message="tar: null-pointer dereference in pax_decode_header in sparse.c" type="description">pax_decode_header in sparse.c in GNU Tar before 1.32 had a NULL pointer dereference when parsing certain archives that have malformed extended headers.</failure>
        </testcase>
        <testcase classname="tar-1.30+dfsg-6" name="[LOW] CVE-2021-20193" time="">
            <failure message="tar: Memory leak in read_header() in list.c" type="description">A flaw was found in the src/list.c of tar 1.33 and earlier. This flaw allows an attacker who can submit a crafted input file to tar to cause uncontrolled consumption of memory. The highest threat from this vulnerability is to system availability.</failure>
        </testcase>
        <testcase classname="tzdata-2021a-0+deb10u5" name="[UNKNOWN] DLA-3134-1" time="">
            <failure message="tzdata - new timezone database" type="description"></failure>
        </testcase>
        <testcase classname="tzdata-2021a-0+deb10u5" name="[UNKNOWN] DLA-3161-1" time="">
            <failure message="tzdata - new timezone database" type="description"></failure>
        </testcase>
        <testcase classname="util-linux-2.33.1-0.1" name="[LOW] CVE-2021-37600" time="">
            <failure message="util-linux: integer overflow can lead to buffer overflow in get_sem_elements() in sys-utils/ipcutils.c" type="description">** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.</failure>
        </testcase>
        <testcase classname="util-linux-2.33.1-0.1" name="[LOW] CVE-2022-0563" time="">
            <failure message="util-linux: partial disclosure of arbitrary files in chfn and chsh when compiled with libreadline" type="description">A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an &#34;INPUTRC&#34; environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.</failure>
        </testcase>
        <testcase classname="zlib1g-1:1.2.11.dfsg-1+deb10u1" name="[CRITICAL] CVE-2022-37434" time="">
            <failure message="zlib: heap-based buffer over-read and overflow in inflate() in inflate.c via a large gzip header extra field" type="description">zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).</failure>
        </testcase>
    </testsuite>
    <testsuite tests="0" failures="0" name="narender046/myapp:1.0 (debian 10.12)" errors="0" skipped="0" time="">
        <properties>
            <property name="type" value="debian"></property>
        </properties>
    </testsuite>
</testsuites>
